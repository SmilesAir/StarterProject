# serverless.yml
service: StarterProject

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  stage: ${opt:stage, "development"}

  environment:
    TEST_TABLE: ${self:service}-${self:provider.stage}-testTable

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TEST_TABLE}"

functions:
  testLambda:
    handler: source/test.handler
    events:
      - http:
          path: handler
          method: post
          cors: true

resources:
  Resources:
    dataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DATA_TABLE}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH

plugins:
  - fullstack-serverless
  - ./public-policy-workaround.js

custom:
  fullstack:
    bucketName: deployed-bucket
    distributionFolder: ../client/builds/web
    indexDocument: index.html